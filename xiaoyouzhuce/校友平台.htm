<!DOCTYPE html>
<html lang="zh-CN">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>校园综合管理系统</title>
  <!-- 外部资源 -->
  <link rel="stylesheet" href="https://cdn.staticfile.net/twitter-bootstrap/5.1.1/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css">
  <script src="https://cdn.staticfile.net/twitter-bootstrap/5.1.1/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/wangeditor@4.7.15/dist/wangEditor.min.js"></script>

  <style>
    /* 全局样式 */
    body {
      background-image: url('bg.jpg');
      background-size: cover;
      background-attachment: fixed;
      padding-top: 20px;
      font-family: 'Microsoft YaHei', 'PingFang SC', sans-serif;
      color: #333;
    }

    a {
      text-decoration: none;
      font-weight: bold;
      color: black;
      transition: color 0.3s ease;
    }

    a:hover {
      color: red;
    }

    .container {
      background-color: rgba(255, 255, 255, 0.95);
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      margin-bottom: 50px;
    }

    .page {
      display: none;
      padding: 20px;
    }

    .page.active {
      display: block;
      animation: fadeIn 0.3s ease;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
      }

      to {
        opacity: 1;
      }
    }

    /* 头部导航样式 */
    .header {
      padding: 20px 0;
      border-bottom: 2px solid #eee;
    }

    .nav-links {
      display: flex;
      align-items: center;
      gap: 15px;
      flex-wrap: wrap;
      background-color: rgba(255, 255, 255, 0.9);
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      padding: 15px 20px;
      margin-bottom: 30px;
      justify-content: center;
    }

    .nav-links a {
      color: #495057;
      padding: 8px 16px;
      border-radius: 6px;
      transition: all 0.3s ease;
      font-size: 14px;
    }

    .nav-links a:hover,
    .nav-links a.active {
      background-color: #0d6efd;
      color: white;
    }

    .search-container {
      margin-top: 10px;
    }

    /* 页面标题样式 */
    h1 {
      color: #333;
      margin-bottom: 25px;
      padding-bottom: 15px;
      border-bottom: 2px solid #1E9FFF;
      font-size: 28px;
    }

    /* 学生管理页面样式 */
    .form-group {
      margin-bottom: 15px;
    }

    .table-container {
      margin-top: 20px;
      background-color: white;
      border-radius: 8px;
      padding: 20px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .form-container {
      background-color: white;
      border-radius: 8px;
      padding: 20px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
    }

    .btn {
      margin-right: 5px;
      transition: all 0.3s ease;
    }

    /* 搜索页面样式 */
    .search-header {
      text-align: center;
      margin-bottom: 30px;
    }

    .search-input-group {
      display: flex;
      max-width: 800px;
      margin: 0 auto 30px;
    }

    .search-input {
      flex: 1;
      border-radius: 6px 0 0 6px;
      height: 45px;
    }

    .search-btn {
      border-radius: 0 6px 6px 0;
      background-color: #0d6efd;
      color: white;
    }

    .filter-tabs {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin-bottom: 20px;
    }

    .filter-tab {
      padding: 8px 16px;
      background-color: #f8f9fa;
      border-radius: 20px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .filter-tab.active {
      background-color: #0d6efd;
      color: white;
    }

    .filter-options {
      display: flex;
      gap: 10px;
      margin-bottom: 30px;
    }

    .filter-btn {
      padding: 5px 12px;
      background-color: #f8f9fa;
      border-radius: 4px;
      border: none;
      cursor: pointer;
    }

    .filter-btn.active {
      background-color: #0d6efd;
      color: white;
    }

    .results-container {
      margin-top: 20px;
    }

    .result-item {
      background-color: white;
      border-radius: 0.75rem;
      padding: 1.5rem;
      margin-bottom: 1rem;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
      transition: all 0.3s ease;
    }

    .result-item:hover {
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      transform: translateY(-2px);
    }

    .result-title {
      font-size: 1.25rem;
      font-weight: 500;
      color: #0d6efd;
      margin-bottom: 0.5rem;
      text-decoration: none;
      transition: color 0.3s ease;
    }

    .result-title:hover {
      color: #0a58ca;
      text-decoration: underline;
    }

    .result-meta {
      display: flex;
      gap: 1rem;
      color: #6c757d;
      font-size: 0.9rem;
      margin-bottom: 0.75rem;
    }

    .result-summary {
      color: #495057;
      line-height: 1.6;
    }

    .result-highlight {
      background-color: #fff3cd;
      padding: 0 0.2rem;
    }

    .empty-results {
      text-align: center;
      padding: 4rem 2rem;
      color: #6c757d;
    }

    .empty-results i {
      font-size: 3rem;
      margin-bottom: 1rem;
      opacity: 0.5;
    }

    /* 好友管理页面样式 */
    .page-header {
      text-align: center;
      margin-bottom: 30px;
      padding-bottom: 20px;
      border-bottom: 2px solid #e9ecef;
    }

    .page-header h1 {
      color: #2c3e50;
      font-size: 28px;
      margin-bottom: 10px;
    }

    .page-header p {
      color: #6c757d;
      font-size: 16px;
    }

    .search-add-section {
      margin-bottom: 30px;
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      align-items: center;
      justify-content: space-between;
    }

    .search-box {
      display: flex;
      flex: 1;
      min-width: 250px;
    }

    .search-box input {
      flex: 1;
      border-radius: 6px 0 0 6px;
    }

    .search-box button {
      border-radius: 0 6px 6px 0;
    }

    #addFriendBtn {
      display: flex;
      align-items: center;
      gap: 5px;
    }

    #friendList {
      background-color: white;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    #friendList th {
      background-color: #f8f9fa;
      border-bottom: 2px solid #dee2e6;
      color: #495057;
      font-weight: 600;
    }

    #friendList td {
      vertical-align: middle;
      transition: background-color 0.2s ease;
    }

    #friendList tr:hover td {
      background-color: #f8f9fa;
    }

    .empty-state {
      text-align: center;
      padding: 60px 20px;
      color: #6c757d;
    }

    .empty-state i {
      font-size: 60px;
      margin-bottom: 20px;
      opacity: 0.3;
    }

    .pagination {
      display: flex;
      justify-content: center;
      margin-top: 30px;
    }

    /* 内容管理页面样式 */
    .action-buttons {
      margin-bottom: 20px;
    }

    .table-wrapper {
      background-color: white;
      border-radius: 8px;
      padding: 20px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .table th {
      background-color: #f8f9fa;
      font-weight: bold;
    }

    .badge {
      cursor: pointer;
      margin-right: 5px;
    }

    .btn-action {
      padding: 3px 10px;
      margin: 0 3px;
      font-size: 12px;
    }

    .filter-container {
      margin-bottom: 20px;
      display: flex;
      flex-wrap: gap-2 align-items-center;
    }

    /* 内容发布页面样式 */
    .editor-container {
      border: 1px solid #ddd;
      border-radius: 4px;
      margin-top: 10px;
      min-height: 300px;
    }

    .btn-group {
      margin-top: 20px;
    }

    .error-message {
      color: #dc3545;
      font-size: 14px;
      margin-top: 5px;
      display: none;
    }

    .form-control.is-invalid {
      border-color: #dc3545;
    }

    /* 详情页面样式 */
    .detail-content {
      background-color: white;
      border-radius: 8px;
      padding: 30px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .detail-title {
      font-size: 24px;
      font-weight: bold;
      margin-bottom: 20px;
      color: #333;
      text-align: center;
    }

    .detail-meta {
      text-align: center;
      margin-bottom: 20px;
      padding-bottom: 20px;
      border-bottom: 1px solid #eee;
      color: #666;
    }

    .detail-body {
      margin-bottom: 30px;
      font-size: 16px;
      line-height: 1.8;
    }

    .detail-actions {
      text-align: center;
      padding-top: 20px;
      border-top: 1px solid #eee;
    }

    /* 新闻卡片样式 */
    .news-card {
      display: flex;
      border-radius: 8px;
      overflow: hidden;
      margin-bottom: 20px;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      background-color: #f9f9f9;
    }

    .news-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
    }

    .news-content {
      padding: 15px;
    }

    .news-title {
      font-size: 18px;
      font-weight: bold;
      margin-bottom: 8px;
      color: #333;
    }

    .news-summary {
      color: #666;
      font-size: 14px;
      line-height: 1.6;
    }

    .news-meta {
      margin-top: 10px;
      font-size: 12px;
      color: #999;
    }

    .news-img {
      height: 120px;
      object-fit: cover;
      width: 100%;
    }

    /* 响应式设计 */
    @media (max-width: 768px) {
      .nav-links {
        justify-content: center;
      }

      .search-container {
        justify-content: center;
      }

      .news-card {
        flex-direction: column;
      }

      .filter-container {
        flex-direction: column;
        gap: 10px;
      }

      .search-add-section {
        flex-direction: column;
        align-items: stretch;
      }

      .search-box {
        width: 100%;
      }

      .nav-links a {
        font-size: 12px;
        padding: 6px 12px;
      }

      .detail-content {
        padding: 20px;
      }

      .detail-title {
        font-size: 20px;
      }
    }
  </style>
</head>

<body>
  <div class="container">
    <!-- 页头 -->
    <div class="header row align-items-center">
      <div class="col-md-2 col-sm-12 text-center">
        <img src="000.jpg" alt="校园系统" class="img-fluid">
      </div>

      <div class="col-md-7 col-sm-12">
        <div class="nav-links">
          <a href="#home" class="nav-link active" data-page="home"><i class="fa fa-home"></i> 首页</a>
          <a href="#login" class="nav-link" data-page="login"><i class="fa fa-sign-in"></i> 登录</a>
          <a href="#userManage" class="nav-link" data-page="userManage"><i class="fa fa-users"></i> 用户管理</a>
          <a href="#infoInput" class="nav-link" data-page="infoInput"><i class="fa fa-pencil-square-o"></i> 信息录入</a>
          <a href="#contentManage" class="nav-link" data-page="contentManage"><i class="fa fa-file-text-o"></i> 内容管理</a>
          <a href="#forum" class="nav-link" data-page="forum"><i class="fa fa-comments"></i> 论坛</a>
          <a href="#friendManage" class="nav-link" data-page="friendManage"><i class="fa fa-address-book"></i> 好友管理</a>
          <a href="#search" class="nav-link" data-page="search"><i class="fa fa-search"></i> 搜索</a>
          <a href="#contentPublish" class="nav-link" data-page="contentPublish"><i class="fa fa-pencil"></i> 发布内容</a>
        </div>
      </div>

      <div class="col-md-3 col-sm-12 search-container d-flex">
        <div class="input-group">
          <input type="text" class="form-control" id="globalSearch" placeholder="全局搜索..." style="height: 30px;">
          <button class="btn btn-primary" type="button" onclick="performGlobalSearch()"
            style="height: 30px; padding: 0 15px;">
            搜索
          </button>
        </div>
      </div>
    </div>

    <!-- 首页 -->
    <div id="home" class="page active">
      <div class="news-section">
        <h1><i class="fa fa-newspaper-o"></i> 校园动态</h1>

        <div class="row">
          <!-- 新闻卡片1 -->
          <div class="col-md-6 col-lg-4">
            <div class="news-card">
              <div class="col-4 p-0">
                <img src="news1.jpg" alt="新闻图片" class="news-img">
              </div>
              <div class="col-8 news-content">
                <div class="news-title">学校举办2023年春季运动会</div>
                <div class="news-summary">我校于4月15日举办了一年一度的春季运动会，全校师生积极参与，展现了良好的精神风貌...</div>
                <div class="news-meta">
                  <span><i class="fa fa-calendar"></i> 2023-04-15</span>
                  <span><i class="fa fa-eye"></i> 1258</span>
                </div>
              </div>
            </div>
          </div>

          <!-- 新闻卡片2 -->
          <div class="col-md-6 col-lg-4">
            <div class="news-card">
              <div class="col-4 p-0">
                <img src="news2.jpg" alt="新闻图片" class="news-img">
              </div>
              <div class="col-8 news-content">
                <div class="news-title">我校新增3个国家级一流本科专业</div>
                <div class="news-summary">近日，教育部公布了2022年度国家级一流本科专业建设点名单，我校3个专业成功入选...</div>
                <div class="news-meta">
                  <span><i class="fa fa-calendar"></i> 2023-03-28</span>
                  <span><i class="fa fa-eye"></i> 2105</span>
                </div>
              </div>
            </div>
          </div>

          <!-- 新闻卡片3 -->
          <div class="col-md-6 col-lg-4">
            <div class="news-card">
              <div class="col-4 p-0">
                <img src="news3.jpg" alt="新闻图片" class="news-img">
              </div>
              <div class="col-8 news-content">
                <div class="news-title">校园招聘会成功举办，提供岗位超5000个</div>
                <div class="news-summary">我校2023届毕业生春季招聘会成功举办，吸引了200余家用人单位参会，提供就业岗位5000余个...</div>
                <div class="news-meta">
                  <span><i class="fa fa-calendar"></i> 2023-04-10</span>
                  <span><i class="fa fa-eye"></i> 1876</span>
                </div>
              </div>
            </div>
          </div>

          <!-- 新闻卡片4 -->
          <div class="col-md-6 col-lg-4">
            <div class="news-card">
              <div class="col-4 p-0">
                <img src="news4.jpg" alt="新闻图片" class="news-img">
              </div>
              <div class="col-8 news-content">
                <div class="news-title">我校与多所国外大学建立合作关系</div>
                <div class="news-summary">校长带队访问了欧洲多所知名高校，达成多项合作意向，将开展学生交换和科研合作项目...</div>
                <div class="news-meta">
                  <span><i class="fa fa-calendar"></i> 2023-04-02</span>
                  <span><i class="fa fa-eye"></i> 1532</span>
                </div>
              </div>
            </div>
          </div>

          <!-- 新闻卡片5 -->
          <div class="col-md-6 col-lg-4">
            <div class="news-card">
              <div class="col-4 p-0">
                <img src="news5.jpg" alt="新闻图片" class="news-img">
              </div>
              <div class="col-8 news-content">
                <div class="news-title">我校学生在全国大学生竞赛中获金奖</div>
                <div class="news-summary">在刚刚结束的全国大学生电子设计竞赛中，我校代表队获得金奖1项，银奖3项，创造历史最好成绩...</div>
                <div class="news-meta">
                  <span><i class="fa fa-calendar"></i> 2023-03-20</span>
                  <span><i class="fa fa-eye"></i> 1789</span>
                </div>
              </div>
            </div>
          </div>

          <!-- 新闻卡片6 -->
          <div class="col-md-6 col-lg-4">
            <div class="news-card">
              <div class="col-4 p-0">
                <img src="news6.jpg" alt="新闻图片" class="news-img">
              </div>
              <div class="col-8 news-content">
                <div class="news-title">图书馆新增10万册纸质图书和5万种电子资源</div>
                <div class="news-summary">为满足师生教学科研需求，学校图书馆新增10万册纸质图书和5万种电子资源，已向读者开放...</div>
                <div class="news-meta">
                  <span><i class="fa fa-calendar"></i> 2023-03-15</span>
                  <span><i class="fa fa-eye"></i> 987</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- 分页 -->
        <div class="mt-4 text-center">
          <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
              <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="Previous">
                  <span aria-hidden="true">&laquo;</span>
                </a>
              </li>
              <li class="page-item active"><a class="page-link" href="#">1</a></li>
              <li class="page-item"><a class="page-link" href="#">2</a></li>
              <li class="page-item"><a class="page-link" href="#">3</a></li>
              <li class="page-item">
                <a class="page-link" href="#" aria-label="Next">
                  <span aria-hidden="true">&raquo;</span>
                </a>
              </li>
            </ul>
          </nav>
        </div>
      </div>
    </div>

    <!-- 登录页面 -->
    <div id="login" class="page">
      <div class="form-container">
        <h1 class="text-center">用户登录</h1>
        <form id="loginForm">
          <div class="form-group">
            <label for="loginUsername">用户名</label>
            <input type="text" class="form-control" id="loginUsername" placeholder="请输入用户名">
          </div>
          <div class="form-group">
            <label for="loginPassword">密码</label>
            <input type="password" class="form-control" id="loginPassword" placeholder="请输入密码">
          </div>
          <div class="form-group form-check">
            <input type="checkbox" class="form-check-input" id="rememberMe">
            <label class="form-check-label" for="rememberMe">记住我</label>
          </div>
          <button type="button" class="btn btn-primary" onclick="login()">登录</button>
          <button type="button" class="btn btn-secondary" onclick="switchPage('home')">返回首页</button>
        </form>
      </div>
    </div>

    <!-- 用户管理页面 -->
    <div id="userManage" class="page">
      <h1 class="text-center">学生信息管理系统</h1>

      <!-- 添加学生表单 -->
      <div class="form-container">
        <div class="row">
          <div class="col-md-2 form-group">
            <button id="addStudentBtn" class="btn btn-primary btn-block" onclick="openStudentModal()">添加学生</button>
          </div>
          <div class="col-md-3 form-group">
            <input type="text" class="form-control" id="studentSearch" placeholder="搜索学生...">
          </div>
          <div class="col-md-2 form-group">
            <button class="btn btn-success btn-block" onclick="searchStudents()">搜索</button>
          </div>
          <div class="col-md-2 form-group">
            <button class="btn btn-warning btn-block" onclick="resetStudentSearch()">重置</button>
          </div>
        </div>
      </div>

      <!-- 学生列表表格 -->
      <div class="table-container">
        <table class="table table-striped table-hover">
          <thead>
            <tr>
              <th>学号</th>
              <th>姓名</th>
              <th>性别</th>
              <th>年龄</th>
              <th>专业</th>
              <th>班级</th>
              <th>操作</th>
            </tr>
          </thead>
          <tbody id="studentTableBody">
            <!-- 学生数据将通过JavaScript动态填充 -->
          </tbody>
        </table>

        <!-- 分页 -->
        <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center" id="studentPagination">
            <!-- 分页将通过JavaScript动态填充 -->
          </ul>
        </nav>
      </div>
    </div>

    <!-- 信息录入页面 -->
    <div id="infoInput" class="page">
      <h1>信息录入</h1>
      <div class="form-container">
        <form id="infoForm">
          <div class="row">
            <div class="col-md-6 form-group">
              <label for="infoName">姓名</label>
              <input type="text" class="form-control" id="infoName" placeholder="请输入姓名">
            </div>
            <div class="col-md-6 form-group">
              <label for="infoId">证件号码</label>
              <input type="text" class="form-control" id="infoId" placeholder="请输入证件号码">
            </div>
          </div>

          <div class="row">
            <div class="col-md-6 form-group">
              <label for="infoPhone">联系电话</label>
              <input type="tel" class="form-control" id="infoPhone" placeholder="请输入联系电话">
            </div>
            <div class="col-md-6 form-group">
              <label for="infoEmail">电子邮箱</label>
              <input type="email" class="form-control" id="infoEmail" placeholder="请输入电子邮箱">
            </div>
          </div>

          <div class="form-group">
            <label for="infoAddress">地址</label>
            <textarea class="form-control" id="infoAddress" rows="3" placeholder="请输入地址"></textarea>
          </div>

          <div class="form-group">
            <label for="infoNotes">备注信息</label>
            <textarea class="form-control" id="infoNotes" rows="3" placeholder="请输入备注信息"></textarea>
          </div>

          <div class="btn-group">
            <button type="button" class="btn btn-primary" onclick="saveInfo()">保存</button>
            <button type="button" class="btn btn-secondary" onclick="resetInfoForm()">重置</button>
            <button type="button" class="btn btn-danger" onclick="switchPage('home')">返回</button>
          </div>
        </form>
      </div>
    </div>

    <!-- 内容管理页面 -->
    <div id="contentManage" class="page">
      <h1>内容管理</h1>

      <!-- 操作按钮 -->
      <div class="action-buttons">
        <button class="btn btn-primary" onclick="switchPage('contentPublish')">
          <i class="fa fa-plus-circle"></i> 发布新内容
        </button>
        <button class="btn btn-danger ml-2" onclick="batchDeleteContent()">
          <i class="fa fa-trash"></i> 批量删除
        </button>
      </div>

      <!-- 筛选条件 -->
      <div class="filter-container d-flex flex-wrap gap-2 align-items-center">
        <label for="contentType" class="form-label mb-0">内容类型：</label>
        <select id="contentType" class="form-select form-select-sm" onchange="filterContent()">
          <option value="all">全部</option>
          <option value="news">学校动态</option>
          <option value="alumni">校友风采</option>
          <option value="study">学习资料</option>
          <option value="job">招聘信息</option>
        </select>

        <label for="statusFilter" class="form-label mb-0 ms-3">状态：</label>
        <select id="statusFilter" class="form-select form-select-sm" onchange="filterContent()">
          <option value="all">全部</option>
          <option value="published">已发布</option>
          <option value="draft">草稿</option>
        </select>

        <button class="btn btn-secondary ms-3" onclick="resetContentFilters()">
          <i class="fa fa-refresh"></i> 重置筛选
        </button>
      </div>

      <!-- 内容列表表格 -->
      <div class="table-wrapper">
        <table class="table table-hover" id="contentTable">
          <thead>
            <tr>
              <th><input type="checkbox" id="selectAll"></th>
              <th>ID</th>
              <th>标题</th>
              <th>类型</th>
              <th>发布时间</th>
              <th>状态</th>
              <th>操作</th>
            </tr>
          </thead>
          <tbody id="contentTableBody">
            <!-- 内容数据将通过JavaScript动态填充 -->
          </tbody>
        </table>

        <!-- 分页 -->
        <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center" id="contentPagination">
            <!-- 分页将通过JavaScript动态填充 -->
          </ul>
        </nav>
      </div>
    </div>

    <!-- 论坛页面 -->
    <div id="forum" class="page">
      <div class="forum-section">
        <h1><i class="fa fa-comments"></i> 校园论坛</h1>

        <div class="form-container mb-4">
          <button class="btn btn-primary" onclick="openNewThreadModal()">
            <i class="fa fa-pencil"></i> 发布新主题
          </button>
        </div>

        <!-- 论坛主题列表 -->
        <div class="table-container">
          <table class="table table-hover">
            <thead>
              <tr>
                <th>主题</th>
                <th>作者</th>
                <th>发布时间</th>
                <th>回复数</th>
                <th>最后回复</th>
              </tr>
            </thead>
            <tbody id="forumThreads">
              <!-- 论坛主题将通过JavaScript动态填充 -->
            </tbody>
          </table>

          <!-- 分页 -->
          <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center" id="forumPagination">
              <!-- 分页将通过JavaScript动态填充 -->
            </ul>
          </nav>
        </div>
      </div>
    </div>

    <!-- 好友管理页面 -->
    <div id="friendManage" class="page">
      <div class="page-header">
        <h1><i class="fa fa-address-book"></i> 好友管理</h1>
        <p>管理您的好友列表，添加新好友，编辑好友信息，删除好友</p>
      </div>

      <!-- 搜索和添加区域 -->
      <div class="search-add-section">
        <div class="search-box">
          <input type="text" id="friendSearchInput" class="form-control" placeholder="搜索好友姓名或手机号...">
          <button id="friendSearchBtn" class="btn btn-primary"><i class="fa fa-search"></i> 搜索</button>
        </div>
        <button id="addFriendBtn" class="btn btn-success"><i class="fa fa-plus"></i> 添加好友</button>
      </div>

      <!-- 好友列表表格 -->
      <table class="table table-hover" id="friendList">
        <thead>
          <tr>
            <th>好友姓名</th>
            <th>好友手机号</th>
            <th>好友备注</th>
            <th>添加时间</th>
            <th>操作</th>
          </tr>
        </thead>
        <tbody id="friendTableBody">
          <!-- 好友数据将通过JavaScript动态填充 -->
        </tbody>
      </table>

      <!-- 空状态显示 -->
      <div id="emptyState" class="empty-state d-none">
        <i class="fa fa-address-book-o"></i>
        <p>暂无好友</p>
        <button id="addFirstFriendBtn" class="btn btn-primary mt-3"><i class="fa fa-plus"></i> 添加第一个好友</button>
      </div>

      <!-- 分页 -->
      <nav aria-label="Page navigation">
        <ul class="pagination" id="friendPagination">
          <!-- 分页将通过JavaScript动态填充 -->
        </ul>
      </nav>
    </div>

    <!-- 搜索页面 -->
    <div id="search" class="page">
      <div class="search-header text-center">
        <h1 class="mb-4">搜索</h1>
        <p class="text-muted mb-5">输入关键词，查找您需要的信息</p>
      </div>

      <!-- 搜索框 -->
      <div class="search-input-group">
        <span class="search-icon"><i class="fa fa-search fa-lg"></i></span>
        <input type="text" id="search-input" class="search-input form-control w-100" placeholder="请输入搜索关键词">
        <button id="search-button" class="search-btn btn">
          <i class="fa fa-search mr-1"></i> 搜索
        </button>
      </div>

      <!-- 搜索筛选 -->
      <div class="filter-tabs d-flex justify-content-center">
        <div class="filter-tab active" data-type="all">全部</div>
        <div class="filter-tab" data-type="news">资讯</div>
        <div class="filter-tab" data-type="resource">资源</div>
        <div class="filter-tab" data-type="user">用户</div>
        <div class="filter-tab" data-type="forum">论坛</div>
      </div>

      <!-- 高级筛选选项 -->
      <div class="filter-options justify-content-center">
        <button class="filter-btn active" data-time="all">全部时间</button>
        <button class="filter-btn" data-time="week">最近一周</button>
        <button class="filter-btn" data-time="month">最近一月</button>
        <button class="filter-btn" data-time="year">最近一年</button>
      </div>

      <!-- 搜索结果区域 -->
      <div class="results-container">
        <div class="result-stats mb-3 text-center">
          找到约 <strong id="result-count">0</strong> 条结果
        </div>

        <div id="search-results">
          <!-- 搜索结果将通过JavaScript动态填充 -->
          <div class="empty-results">
            <i class="fa fa-search"></i>
            <p>请输入关键词进行搜索</p>
          </div>
        </div>

        <!-- 分页 -->
        <div class="pagination justify-content-center mt-4">
          <ul class="pagination">
            <li class="page-item disabled">
              <a class="page-link" href="#" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
              </a>
            </li>
            <li class="page-item active"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
              <a class="page-link" href="#" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
              </a>
            </li>
          </ul>
        </div>
      </div>
    </div>

    <!-- 内容发布页面 -->
    <div id="contentPublish" class="page">
      <div class="publish-section">
        <h1><i class="fa fa-pencil"></i> 发布新内容</h1>

        <div class="form-container">
          <form id="publishForm">
            <div class="form-group">
              <label for="contentTitle">标题</label>
              <input type="text" class="form-control" id="contentTitle" placeholder="请输入内容标题">
              <div class="error-message" id="titleError">请输入标题</div>
            </div>

            <div class="form-group">
              <label for="contentCategory">内容分类</label>
              <select class="form-control" id="contentCategory">
                <option value="">请选择分类</option>
                <option value="news">学校动态</option>
                <option value="alumni">校友风采</option>
                <option value="study">学习资料</option>
                <option value="job">招聘信息</option>
              </select>
              <div class="error-message" id="categoryError">请选择分类</div>
            </div>

            <div class="form-group">
              <label>内容正文</label>
              <div id="editor" class="editor-container"></div>
              <div class="error-message" id="contentError">请输入内容</div>
            </div>

            <div class="form-group">
              <label for="contentStatus">发布状态</label>
              <select class="form-control" id="contentStatus">
                <option value="published">立即发布</option>
                <option value="draft">保存为草稿</option>
              </select>
            </div>

            <div class="btn-group">
              <button type="button" class="btn btn-primary" onclick="saveContent()">保存</button>
              <button type="button" class="btn btn-secondary" onclick="resetPublishForm()">重置</button>
              <button type="button" class="btn btn-danger" onclick="switchPage('contentManage')">返回</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- 模态框 - 学生信息 -->
  <div class="modal fade" id="studentModal" tabindex="-1" aria-labelledby="studentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="studentModalLabel">添加学生</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="studentForm">
            <input type="hidden" id="studentId">
            <div class="form-group">
              <label for="studentNo">学号</label>
              <input type="text" class="form-control" id="studentNo" placeholder="请输入学号">
            </div>
            <div class="form-group">
              <label for="studentName">姓名</label>
              <input type="text" class="form-control" id="studentName" placeholder="请输入姓名">
            </div>
            <div class="form-group">
              <label for="studentGender">性别</label>
              <select class="form-control" id="studentGender">
                <option value="男">男</option>
                <option value="女">女</option>
              </select>
            </div>
            <div class="form-group">
              <label for="studentAge">年龄</label>
              <input type="number" class="form-control" id="studentAge" placeholder="请输入年龄">
            </div>
            <div class="form-group">
              <label for="studentMajor">专业</label>
              <input type="text" class="form-control" id="studentMajor" placeholder="请输入专业">
            </div>
            <div class="form-group">
              <label for="studentClass">班级</label>
              <input type="text" class="form-control" id="studentClass" placeholder="请输入班级">
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
          <button type="button" class="btn btn-primary" onclick="saveStudent()">保存</button>
        </div>
      </div>
    </div>
  </div>

  <!-- 模态框 - 好友信息 -->
  <div class="modal fade" id="friendModal" tabindex="-1" aria-labelledby="friendModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="friendModalLabel">添加好友</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="friendForm">
            <input type="hidden" id="friendId">
            <div class="form-group">
              <label for="friendName">姓名</label>
              <input type="text" class="form-control" id="friendName" placeholder="请输入好友姓名">
            </div>
            <div class="form-group">
              <label for="friendPhone">手机号</label>
              <input type="text" class="form-control" id="friendPhone" placeholder="请输入好友手机号">
            </div>
            <div class="form-group">
              <label for="friendRemark">备注</label>
              <input type="text" class="form-control" id="friendRemark" placeholder="请输入好友备注（选填）">
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
          <button type="button" class="btn btn-primary" onclick="saveFriend()">保存</button>
        </div>
      </div>
    </div>
  </div>

  <!-- 模态框 - 确认删除 -->
  <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="confirmDeleteModalLabel">确认删除</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          确定要删除这条记录吗？此操作不可恢复。
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
          <button type="button" class="btn btn-danger" id="confirmDeleteBtn">确认删除</button>
        </div>
      </div>
    </div>
  </div>

  <!-- 模态框 - 聊天 -->
  <div class="modal fade" id="chatModal" tabindex="-1" aria-labelledby="chatModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="chatModalLabel">与 <span id="chatFriendName"></span> 聊天</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div id="chatMessages"
            style="height: 300px; overflow-y: auto; border: 1px solid #eee; padding: 10px; margin-bottom: 10px;">
            <!-- 聊天消息将通过JavaScript动态填充 -->
          </div>
          <div class="input-group">
            <input type="text" id="messageInput" class="form-control" placeholder="输入消息...">
            <button class="btn btn-primary" type="button" id="sendMessageBtn">发送</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // 页面切换功能
    document.addEventListener('DOMContentLoaded', function () {
      // 初始化导航事件
      const navLinks = document.querySelectorAll('.nav-link');
      navLinks.forEach(link => {
        link.addEventListener('click', function (e) {
          e.preventDefault();
          const pageId = this.getAttribute('data-page');
          switchPage(pageId);
        });
      });

      // 初始化富文本编辑器
      initEditor();

      // 初始化各页面数据
      initStudentData();
      initFriendData();
      initContentData();
      initForumData();

      // 初始化搜索事件
      document.getElementById('search-button').addEventListener('click', performSearch);
      document.getElementById('search-input').addEventListener('keyup', function (e) {
        if (e.key === 'Enter') performSearch();
      });

      // 初始化好友搜索事件
      document.getElementById('friendSearchBtn').addEventListener('click', performFriendSearch);
      document.getElementById('friendSearchInput').addEventListener('keyup', function (e) {
        if (e.key === 'Enter') performFriendSearch();
      });

      // 添加好友按钮事件
      document.getElementById('addFriendBtn').addEventListener('click', openAddFriendModal);
      document.getElementById('addFirstFriendBtn').addEventListener('click', openAddFriendModal);

      // 筛选标签事件
      const filterTabs = document.querySelectorAll('.filter-tab');
      filterTabs.forEach(tab => {
        tab.addEventListener('click', function () {
          filterTabs.forEach(t => t.classList.remove('active'));
          this.classList.add('active');
        });
      });

      // 时间筛选按钮事件
      const filterBtns = document.querySelectorAll('.filter-btn');
      filterBtns.forEach(btn => {
        btn.addEventListener('click', function () {
          const parent = this.parentElement;
          parent.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
          this.classList.add('active');
        });
      });
    });

    // 切换页面函数
    function switchPage(pageId) {
      // 隐藏所有页面
      document.querySelectorAll('.page').forEach(page => {
        page.classList.remove('active');
      });

      // 显示目标页面
      document.getElementById(pageId).classList.add('active');

      // 更新导航状态
      document.querySelectorAll('.nav-link').forEach(link => {
        link.classList.remove('active');
        if (link.getAttribute('data-page') === pageId) {
          link.classList.add('active');
        }
      });

      // 更新浏览器地址栏
      history.pushState(null, null, '#' + pageId);
    }

    // 全局搜索功能
    function performGlobalSearch() {
      const searchTerm = document.getElementById('globalSearch').value.trim();
      if (searchTerm) {
        switchPage('search');
        document.getElementById('search-input').value = searchTerm;
        performSearch();
      }
    }

    // 搜索页面搜索功能
    function performSearch() {
      const searchTerm = document.getElementById('search-input').value.trim();
      if (!searchTerm) return;

      // 模拟搜索结果
      const resultsContainer = document.getElementById('search-results');
      resultsContainer.innerHTML = '';

      // 生成模拟结果
      const results = [
        {
          title: `${searchTerm}相关的学校动态`,
          type: 'news',
          time: '2023-04-15',
          summary: `这是关于${searchTerm}的学校动态内容摘要，包含了相关的重要信息和最新进展...`
        },
        {
          title: `${searchTerm}学习资料分享`,
          type: 'resource',
          time: '2023-04-10',
          summary: `这里提供了关于${searchTerm}的学习资料，包括教材、课件和习题等内容...`
        },
        {
          title: `${searchTerm}论坛讨论`,
          type: 'forum',
          time: '2023-04-05',
          summary: `在论坛中关于${searchTerm}的讨论，大家分享了各自的经验和观点...`
        },
        {
          title: `${searchTerm}老师的个人主页`,
          type: 'user',
          time: '2023-03-28',
          summary: `${searchTerm}老师的研究方向包括相关领域，发表过多篇学术论文...`
        }
      ];

      // 更新结果计数
      document.getElementById('result-count').textContent = results.length;

      // 渲染结果
      results.forEach(result => {
        const resultItem = document.createElement('div');
        resultItem.className = 'result-item';
        resultItem.innerHTML = `
          <a href="#" class="result-title">${result.title}</a>
          <div class="result-meta">
            <span>${result.type === 'news' ? '学校动态' :
            result.type === 'resource' ? '学习资料' :
              result.type === 'forum' ? '论坛' : '用户'}</span>
            <span>${result.time}</span>
          </div>
          <div class="result-summary">${result.summary}</div>
        `;
        resultsContainer.appendChild(resultItem);
      });
    }

    // 初始化富文本编辑器
    function initEditor() {
      const E = window.wangEditor;
      const editor = new E('#editor');
      editor.create();
    }

    // 学生管理相关功能
    let students = [
      { id: 1, no: '2021001', name: '张三', gender: '男', age: 20, major: '计算机科学', className: '计科2101' },
      { id: 2, no: '2021002', name: '李四', gender: '女', age: 19, major: '软件工程', className: '软工2102' },
      { id: 3, no: '2021003', name: '王五', gender: '男', age: 21, major: '数据科学', className: '数科2101' }
    ];
    let currentStudentId = null;

    function initStudentData() {
      renderStudentList();
    }

    function renderStudentList() {
      const tableBody = document.getElementById('studentTableBody');
      tableBody.innerHTML = '';

      students.forEach(student => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${student.no}</td>
          <td>${student.name}</td>
          <td>${student.gender}</td>
          <td>${student.age}</td>
          <td>${student.major}</td>
          <td>${student.className}</td>
          <td>
            <button class="btn btn-sm btn-primary" onclick="editStudent(${student.id})">编辑</button>
            <button class="btn btn-sm btn-danger" onclick="deleteStudent(${student.id})">删除</button>
          </td>
        `;
        tableBody.appendChild(row);
      });
    }

    function openStudentModal() {
      currentStudentId = null;
      document.getElementById('studentModalLabel').textContent = '添加学生';
      document.getElementById('studentForm').reset();
      document.getElementById('studentId').value = '';
      new bootstrap.Modal(document.getElementById('studentModal')).show();
    }

    function editStudent(id) {
      currentStudentId = id;
      const student = students.find(s => s.id === id);
      if (student) {
        document.getElementById('studentModalLabel').textContent = '编辑学生';
        document.getElementById('studentId').value = student.id;
        document.getElementById('studentNo').value = student.no;
        document.getElementById('studentName').value = student.name;
        document.getElementById('studentGender').value = student.gender;
        document.getElementById('studentAge').value = student.age;
        document.getElementById('studentMajor').value = student.major;
        document.getElementById('studentClass').value = student.className;
        new bootstrap.Modal(document.getElementById('studentModal')).show();
      }
    }

    function saveStudent() {
      const id = document.getElementById('studentId').value;
      const no = document.getElementById('studentNo').value;
      const name = document.getElementById('studentName').value;
      const gender = document.getElementById('studentGender').value;
      const age = document.getElementById('studentAge').value;
      const major = document.getElementById('studentMajor').value;
      const className = document.getElementById('studentClass').value;

      if (!no || !name || !age || !major || !className) {
        alert('请填写完整信息');
        return;
      }

      if (currentStudentId) {
        // 更新学生
        const index = students.findIndex(s => s.id === currentStudentId);
        if (index !== -1) {
          students[index] = {
            ...students[index],
            no, name, gender, age, major, className
          };
        }
      } else {
        // 添加新学生
        const newId = students.length > 0 ? Math.max(...students.map(s => s.id)) + 1 : 1;
        students.push({
          id: newId,
          no, name, gender, age, major, className
        });
      }

      // 关闭模态框并刷新列表
      bootstrap.Modal.getInstance(document.getElementById('studentModal')).hide();
      renderStudentList();
    }

    function deleteStudent(id) {
      if (confirm('确定要删除这个学生吗？')) {
        students = students.filter(s => s.id !== id);
        renderStudentList();
      }
    }

    function searchStudents() {
      const searchTerm = document.getElementById('studentSearch').value.toLowerCase();
      const filtered = students.filter(s =>
        s.no.toLowerCase().includes(searchTerm) ||
        s.name.toLowerCase().includes(searchTerm) ||
        s.major.toLowerCase().includes(searchTerm) ||
        s.className.toLowerCase().includes(searchTerm)
      );

      const tableBody = document.getElementById('studentTableBody');
      tableBody.innerHTML = '';

      filtered.forEach(student => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${student.no}</td>
          <td>${student.name}</td>
          <td>${student.gender}</td>
          <td>${student.age}</td>
          <td>${student.major}</td>
          <td>${student.className}</td>
          <td>
            <button class="btn btn-sm btn-primary" onclick="editStudent(${student.id})">编辑</button>
            <button class="btn btn-sm btn-danger" onclick="deleteStudent(${student.id})">删除</button>
          </td>
        `;
        tableBody.appendChild(row);
      });
    }

    function resetStudentSearch() {
      document.getElementById('studentSearch').value = '';
      renderStudentList();
    }

    // 好友管理相关功能
    let friends = [
      { id: 1, name: '张三', phone: '13800000001', remark: '大学同学', addTime: '2023-01-15' },
      { id: 2, name: '李四', phone: '13900000002', remark: '高中同学', addTime: '2023-02-20' },
      { id: 3, name: '王五', phone: '13700000003', remark: '室友', addTime: '2023-03-10' },
      { id: 4, name: '赵六', phone: '13600000004', remark: '项目组同事', addTime: '2023-04-05' },
      { id: 5, name: '钱七', phone: '13500000005', remark: '篮球队友', addTime: '2023-05-18' }
    ];
    let currentFriendId = null;

    function initFriendData() {
      renderFriendList();
    }

    function renderFriendList() {
      const tableBody = document.getElementById('friendTableBody');
      const emptyState = document.getElementById('emptyState');
      tableBody.innerHTML = '';

      if (friends.length === 0) {
        emptyState.classList.remove('d-none');
        return;
      }

      emptyState.classList.add('d-none');

      friends.forEach(friend => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${friend.name}</td>
          <td>${friend.phone}</td>
          <td>${friend.remark || '-'}</td>
          <td>${friend.addTime}</td>
          <td>
            <button class="btn btn-sm btn-primary" onclick="openChatModal(${friend.id})">聊一聊</button>
            <button class="btn btn-sm btn-success" onclick="editFriend(${friend.id})">编辑</button>
            <button class="btn btn-sm btn-danger" onclick="confirmDeleteFriend(${friend.id})">删除</button>
          </td>
        `;
        tableBody.appendChild(row);
      });
    }

    function openAddFriendModal() {
      currentFriendId = null;
      document.getElementById('friendModalLabel').textContent = '添加好友';
      document.getElementById('friendForm').reset();
      document.getElementById('friendId').value = '';
      new bootstrap.Modal(document.getElementById('friendModal')).show();
    }

    function editFriend(id) {
      currentFriendId = id;
      const friend = friends.find(f => f.id === id);
      if (friend) {
        document.getElementById('friendModalLabel').textContent = '编辑好友';
        document.getElementById('friendId').value = friend.id;
        document.getElementById('friendName').value = friend.name;
        document.getElementById('friendPhone').value = friend.phone;
        document.getElementById('friendRemark').value = friend.remark || '';
        new bootstrap.Modal(document.getElementById('friendModal')).show();
      }
    }

    function saveFriend() {
      const name = document.getElementById('friendName').value;
      const phone = document.getElementById('friendPhone').value;
      const remark = document.getElementById('friendRemark').value;

      if (!name || !phone) {
        alert('请填写好友姓名和手机号');
        return;
      }

      if (currentFriendId) {
        // 更新好友
        const index = friends.findIndex(f => f.id === currentFriendId);
        if (index !== -1) {
          friends[index] = {
            ...friends[index],
            name, phone, remark
          };
        }
      } else {
        // 添加新好友
        const newId = friends.length > 0 ? Math.max(...friends.map(f => f.id)) + 1 : 1;
        const today = new Date().toISOString().split('T')[0];
        friends.push({
          id: newId,
          name,
          phone,
          remark,
          addTime: today
        });
      }

      // 关闭模态框并刷新列表
      bootstrap.Modal.getInstance(document.getElementById('friendModal')).hide();
      renderFriendList();
    }

    function confirmDeleteFriend(id) {
      currentFriendId = id;
      new bootstrap.Modal(document.getElementById('confirmDeleteModal')).show();

      // 绑定确认删除事件
      document.getElementById('confirmDeleteBtn').onclick = function () {
        deleteFriend();
      };
    }

    function deleteFriend() {
      if (currentFriendId) {
        friends = friends.filter(f => f.id !== currentFriendId);
        bootstrap.Modal.getInstance(document.getElementById('confirmDeleteModal')).hide();
        renderFriendList();
      }
    }

    function openChatModal(id) {
      const friend = friends.find(f => f.id === id);
      if (friend) {
        document.getElementById('chatFriendName').textContent = friend.name;
        document.getElementById('chatMessages').innerHTML = `
          <div class="mb-2"><strong>${friend.name}:</strong> 你好！最近怎么样？</div>
          <div class="mb-2"><strong>我:</strong> 挺好的，你呢？</div>
        `;
        new bootstrap.Modal(document.getElementById('chatModal')).show();

        // 绑定发送消息事件
        document.getElementById('sendMessageBtn').onclick = function () {
          sendMessage(friend.name);
        };

        document.getElementById('messageInput').addEventListener('keyup', function (e) {
          if (e.key === 'Enter') {
            sendMessage(friend.name);
          }
        });
      }
    }

    function sendMessage(friendName) {
      const messageInput = document.getElementById('messageInput');
      const message = messageInput.value.trim();

      if (message) {
        const chatMessages = document.getElementById('chatMessages');
        chatMessages.innerHTML += `<div class="mb-2"><strong>我:</strong> ${message}</div>`;
        messageInput.value = '';
        chatMessages.scrollTop = chatMessages.scrollHeight;
      }
    }

    function performFriendSearch() {
      const searchTerm = document.getElementById('friendSearchInput').value.toLowerCase().trim();
      if (!searchTerm) {
        renderFriendList();
        return;
      }

      const filtered = friends.filter(friend =>
        friend.name.toLowerCase().includes(searchTerm) ||
        friend.phone.includes(searchTerm) ||
        (friend.remark && friend.remark.toLowerCase().includes(searchTerm))
      );

      const tableBody = document.getElementById('friendTableBody');
      const emptyState = document.getElementById('emptyState');
      tableBody.innerHTML = '';

      if (filtered.length === 0) {
        emptyState.classList.remove('d-none');
        return;
      }

      emptyState.classList.add('d-none');

      filtered.forEach(friend => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${friend.name}</td>
          <td>${friend.phone}</td>
          <td>${friend.remark || '-'}</td>
          <td>${friend.addTime}</td>
          <td>
            <button class="btn btn-sm btn-primary" onclick="openChatModal(${friend.id})">聊一聊</button>
            <button class="btn btn-sm btn-success" onclick="editFriend(${friend.id})">编辑</button>
            <button class="btn btn-sm btn-danger" onclick="confirmDeleteFriend(${friend.id})">删除</button>
          </td>
        `;
        tableBody.appendChild(row);
      });
    }

    // 内容管理相关功能
    let contents = [
      { id: 1, title: '2023年春季学期校历', type: 'news', time: '2023-02-15', status: 'published' },
      { id: 2, title: '计算机科学与技术专业课程大纲', type: 'study', time: '2023-01-20', status: 'published' },
      { id: 3, title: '2023届毕业生就业指南', type: 'job', time: '2023-03-10', status: 'draft' },
      { id: 4, title: '优秀校友访谈：科技创新之路', type: 'alumni', time: '2023-03-25', status: 'published' },
      { id: 5, title: '校园招聘会安排通知', type: 'job', time: '2023-04-05', status: 'published' }
    ];

    function initContentData() {
      renderContentList();
    }

    function renderContentList() {
      const tableBody = document.getElementById('contentTableBody');
      tableBody.innerHTML = '';

      contents.forEach(content => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td><input type="checkbox" class="content-checkbox" data-id="${content.id}"></td>
          <td>${content.id}</td>
          <td>${content.title}</td>
          <td>${content.type === 'news' ? '学校动态' :
            content.type === 'alumni' ? '校友风采' :
              content.type === 'study' ? '学习资料' : '招聘信息'}</td>
          <td>${content.time}</td>
          <td>
            <span class="badge ${content.status === 'published' ? 'bg-success' : 'bg-secondary'}">
              ${content.status === 'published' ? '已发布' : '草稿'}
            </span>
          </td>
          <td>
            <button class="btn btn-sm btn-info" onclick="viewContent(${content.id})">查看</button>
            <button class="btn btn-sm btn-primary" onclick="editContent(${content.id})">编辑</button>
            <button class="btn btn-sm btn-danger" onclick="confirmDeleteContent(${content.id})">删除</button>
          </td>
        `;
        tableBody.appendChild(row);
      });

      // 全选功能
      document.getElementById('selectAll').addEventListener('change', function () {
        const checkboxes = document.querySelectorAll('.content-checkbox');
        checkboxes.forEach(checkbox => {
          checkbox.checked = this.checked;
        });
      });
    }

    function filterContent() {
      const contentType = document.getElementById('contentType').value;
      const statusFilter = document.getElementById('statusFilter').value;

      const rows = document.querySelectorAll('#contentTableBody tr');

      rows.forEach(row => {
        const type = row.querySelector('td:nth-child(4)').textContent;
        const status = row.querySelector('td:nth-child(6) .badge').textContent;

        let typeMatch = contentType === 'all';
        if (contentType === 'news' && type === '学校动态') typeMatch = true;
        if (contentType === 'alumni' && type === '校友风采') typeMatch = true;
        if (contentType === 'study' && type === '学习资料') typeMatch = true;
        if (contentType === 'job' && type === '招聘信息') typeMatch = true;

        let statusMatch = statusFilter === 'all';
        if (statusFilter === 'published' && status === '已发布') statusMatch = true;
        if (statusFilter === 'draft' && status === '草稿') statusMatch = true;

        row.style.display = typeMatch && statusMatch ? '' : 'none';
      });
    }

    function resetContentFilters() {
      document.getElementById('contentType').value = 'all';
      document.getElementById('statusFilter').value = 'all';
      filterContent();
    }

    function viewContent(id) {
      alert(`查看内容 ID: ${id}`);
      // 实际应用中可以跳转到内容详情页或显示详情模态框
    }

    function editContent(id) {
      switchPage('contentPublish');
      // 实际应用中可以加载内容数据到编辑表单
    }

    function confirmDeleteContent(id) {
      if (confirm('确定要删除这条内容吗？')) {
        contents = contents.filter(c => c.id !== id);
        renderContentList();
      }
    }

    function batchDeleteContent() {
      const checkedIds = [];
      document.querySelectorAll('.content-checkbox:checked').forEach(checkbox => {
        checkedIds.push(parseInt(checkbox.getAttribute('data-id')));
      });

      if (checkedIds.length === 0) {
        alert('请选择要删除的内容');
        return;
      }

      if (confirm(`确定要删除选中的 ${checkedIds.length} 条内容吗？`)) {
        contents = contents.filter(c => !checkedIds.includes(c.id));
        renderContentList();
      }
    }

    function saveContent() {
      const title = document.getElementById('contentTitle').value;
      const category = document.getElementById('contentCategory').value;
      const status = document.getElementById('contentStatus').value;

      if (!title) {
        document.getElementById('titleError').style.display = 'block';
        return;
      }

      if (!category) {
        document.getElementById('categoryError').style.display = 'block';
        return;
      }

      // 模拟保存内容
      const newId = contents.length > 0 ? Math.max(...contents.map(c => c.id)) + 1 : 1;
      const today = new Date().toISOString().split('T')[0];

      contents.push({
        id: newId,
        title,
        type: category,
        time: today,
        status
      });

      alert('内容保存成功！');
      switchPage('contentManage');
      renderContentList();
    }

    function resetPublishForm() {
      document.getElementById('publishForm').reset();
      document.querySelectorAll('.error-message').forEach(el => {
        el.style.display = 'none';
      });
    }

    // 信息录入相关功能
    function saveInfo() {
      const name = document.getElementById('infoName').value;
      const id = document.getElementById('infoId').value;

      if (!name || !id) {
        alert('请填写姓名和证件号码');
        return;
      }

      alert('信息保存成功！');
      resetInfoForm();
    }

    function resetInfoForm() {
      document.getElementById('infoForm').reset();
    }

    // 论坛相关功能
    let forumThreads = [
      { id: 1, title: '如何准备计算机专业考研？', author: '考研君', time: '2023-04-10', replies: 28, lastReply: '2023-04-15' },
      { id: 2, title: '分享一下我的实习经历', author: '职场新人', time: '2023-04-05', replies: 15, lastReply: '2023-04-12' },
      { id: 3, title: '学校图书馆新资源推荐', author: '图书管理员', time: '2023-03-28', replies: 8, lastReply: '2023-04-01' },
      { id: 4, title: '寻找篮球队队友', author: '运动达人', time: '2023-04-12', replies: 5, lastReply: '2023-04-14' },
      { id: 5, title: '毕业设计选题建议', author: '大四学长', time: '2023-04-01', replies: 32, lastReply: '2023-04-15' }
    ];

    function initForumData() {
      renderForumThreads();
    }

    function renderForumThreads() {
      const threadsContainer = document.getElementById('forumThreads');
      threadsContainer.innerHTML = '';

      forumThreads.forEach(thread => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td><a href="#" onclick="viewForumThread(${thread.id})">${thread.title}</a></td>
          <td>${thread.author}</td>
          <td>${thread.time}</td>
          <td>${thread.replies}</td>
          <td>${thread.lastReply}</td>
        `;
        threadsContainer.appendChild(row);
      });
    }

    function openNewThreadModal() {
      alert('打开发布新主题模态框');
      // 实际应用中可以打开发布新主题的模态框
    }

    function viewForumThread(id) {
      alert(`查看论坛主题 ID: ${id}`);
      // 实际应用中可以跳转到论坛主题详情页
    }

    // 登录功能
    function login() {
      const username = document.getElementById('loginUsername').value;
      const password = document.getElementById('loginPassword').value;

      if (!username || !password) {
        alert('请输入用户名和密码');
        return;
      }

      // 模拟登录成功
      alert('登录成功！');
      switchPage('home');
    }
  </script>
</body>

</html>